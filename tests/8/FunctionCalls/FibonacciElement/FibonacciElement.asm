@256
D=A
@SP
M=D
//call Sys.init 0
@RETURN_Sys.init_0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(RETURN_Sys.init_0)
//function Main.fibonacci 0
(Main.fibonacci)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_0
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_0
0;JMP
(LT_0)
@SP
A=M-1
A=A-1
M=-1
(END_LT_0)
@SP
M=M-1
//if-goto N_LT_2
@SP
A=M-1
D=M
@SP
M=M-1
@Main.N_LT_2
D;JNE
//goto N_GE_2
@Main.N_GE_2
0;JMP
//label N_LT_2
(Main.N_LT_2)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//label N_GE_2
(Main.N_GE_2)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Main.fibonacci 1
@RETURN_Main.fibonacci_1
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RETURN_Main.fibonacci_1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Main.fibonacci 1
@RETURN_Main.fibonacci_2
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RETURN_Main.fibonacci_2)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Sys.init 0
(Sys.init)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci 1
@RETURN_Main.fibonacci_3
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RETURN_Main.fibonacci_3)
//label END
(Sys.END)
//goto END
@Sys.END
0;JMP
