function Graphics.mod 0
label WHILE_EXP0
push argument 0
push argument 1
gt
push argument 0
push argument 1
eq
or
not
if-goto WHILE_END0
push argument 0
push argument 1
sub
pop argument 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Graphics.getArrowXByIndex 0
push constant 127
push argument 0
push constant 26
call Math.multiply 2
add
return
function Graphics.getCircleXByIndex 0
push constant 127
push argument 0
push constant 26
call Math.multiply 2
add
push constant 12
add
return
function Graphics.getCircleYByIndex 0
push constant 49
push argument 0
push constant 26
call Math.multiply 2
add
push constant 12
add
return
function Graphics.Print_Empty_Board 10
call Screen.clearScreen 0
pop temp 0
push constant 25
pop local 4
push constant 1
pop local 5
push constant 10
pop local 9
push constant 8
pop local 8
push constant 127
pop local 6
push constant 49
pop local 7
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push local 8
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push local 9
lt
not
if-goto WHILE_END1
push local 6
push local 1
push local 4
push local 5
add
call Math.multiply 2
add
pop local 2
push local 7
push local 0
push local 4
push local 5
add
call Math.multiply 2
add
pop local 3
push local 2
push local 3
push local 2
push local 4
add
push constant 1
sub
push local 3
push local 4
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.Print_Selection_Arrow 12
push argument 0
call Graphics.getArrowXByIndex 1
pop local 10
push constant 5
pop local 11
push constant 40
pop local 0
push constant 25
pop local 1
push constant 25
pop local 2
push constant 10
pop local 3
push local 10
push local 1
push constant 2
call Math.divide 2
add
pop local 8
push argument 1
call Screen.setColor 1
pop temp 0
push local 8
push local 3
push constant 2
call Math.divide 2
sub
push local 11
push local 8
push local 3
push constant 2
call Math.divide 2
add
push local 11
push local 2
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
pop local 7
label WHILE_EXP0
push local 7
push constant 15
lt
not
if-goto WHILE_END0
push local 8
push constant 14
push local 7
sub
sub
pop local 9
push local 11
push local 2
add
push local 7
add
pop local 5
label WHILE_EXP1
push local 9
push local 8
push constant 14
push local 7
sub
add
eq
push local 9
push local 8
push constant 14
push local 7
sub
add
lt
or
not
if-goto WHILE_END1
push local 9
push local 5
call Screen.drawPixel 2
pop temp 0
push local 9
push constant 1
add
pop local 9
goto WHILE_EXP1
label WHILE_END1
push local 7
push constant 1
add
pop local 7
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.Print_Piece_Type_One 4
push argument 0
call Graphics.getCircleXByIndex 1
pop local 2
push argument 1
call Graphics.getCircleYByIndex 1
pop local 3
push constant 0
not
pop local 1
push constant 12
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
push local 0
push constant 0
gt
or
not
if-goto WHILE_END0
push local 1
call Screen.setColor 1
pop temp 0
push local 2
push local 3
push local 0
call Screen.drawCircle 3
pop temp 0
push local 1
not
pop local 1
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.Print_Piece_Type_Two 9
push argument 0
call Graphics.getCircleXByIndex 1
pop local 5
push argument 1
call Graphics.getCircleYByIndex 1
pop local 6
push constant 0
not
pop local 7
push local 6
push constant 12
sub
pop local 1
push constant 0
pop local 8
label WHILE_EXP0
push local 1
push local 6
push constant 13
add
lt
not
if-goto WHILE_END0
push local 5
push constant 12
sub
pop local 0
label WHILE_EXP1
push local 0
push local 5
push constant 13
add
lt
not
if-goto WHILE_END1
push local 7
call Screen.setColor 1
pop temp 0
push local 0
push local 5
sub
pop local 2
push local 1
push local 6
sub
pop local 3
push local 2
push local 2
call Math.multiply 2
push local 3
push local 3
call Math.multiply 2
add
pop local 4
push local 4
push constant 144
lt
push local 4
push constant 144
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
call Screen.drawPixel 2
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 8
push constant 1
add
pop local 8
push local 8
push constant 3
call Graphics.mod 2
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 7
goto IF_END1
label IF_FALSE1
push constant 0
not
pop local 7
label IF_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.Print_Piece_Type_Zero 4
push argument 0
call Graphics.getCircleXByIndex 1
pop local 2
push argument 1
call Graphics.getCircleYByIndex 1
pop local 3
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 3
push constant 12
sub
pop local 1
label WHILE_EXP0
push local 1
push local 3
push constant 13
add
lt
not
if-goto WHILE_END0
push local 2
push constant 12
sub
pop local 0
label WHILE_EXP1
push local 0
push local 2
push constant 13
add
lt
not
if-goto WHILE_END1
push local 0
push local 1
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.Print_Player_X_Wins_Message 0
push constant 7
call String.new 1
push constant 80
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push argument 0
call Output.printInt 1
pop temp 0
push constant 6
call String.new 1
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
function Graphics.Print_Winning_Animation 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push argument 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 2
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 3
push argument 4
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 5
push argument 6
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 7
push argument 8
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 1
push argument 2
call Graphics.Print_Piece_Type_One 2
pop temp 0
push argument 3
push argument 4
call Graphics.Print_Piece_Type_One 2
pop temp 0
push argument 5
push argument 6
call Graphics.Print_Piece_Type_One 2
pop temp 0
push argument 7
push argument 8
call Graphics.Print_Piece_Type_One 2
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 1
push argument 2
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 3
push argument 4
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 5
push argument 6
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 7
push argument 8
call Graphics.Print_Piece_Type_Zero 2
pop temp 0
push argument 1
push argument 2
call Graphics.Print_Piece_Type_Two 2
pop temp 0
push argument 3
push argument 4
call Graphics.Print_Piece_Type_Two 2
pop temp 0
push argument 5
push argument 6
call Graphics.Print_Piece_Type_Two 2
pop temp 0
push argument 7
push argument 8
call Graphics.Print_Piece_Type_Two 2
pop temp 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
