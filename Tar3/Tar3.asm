@256
D=A
@SP
M=D
//call Sys.init 0
@RETURN_Sys.init_0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(RETURN_Sys.init_0)
//function Array.new 0
(Array.new)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_0
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_0
0;JMP
(GT_0)
@SP
A=M-1
A=A-1
M=-1
(END_GT_0)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Array.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Array.IF_FALSE0
0;JMP
//label IF_TRUE0
(Array.IF_TRUE0)
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_1
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_1)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Array.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.alloc 1
@RETURN_Memory.alloc_2
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(RETURN_Memory.alloc_2)
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Array.dispose 0
(Array.dispose)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.deAlloc 1
@RETURN_Memory.deAlloc_3
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(RETURN_Memory.deAlloc_3)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Graphics.Print_Empty_Board 10
(Graphics.Print_Empty_Board)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@10
D=A
@SP
M=M+D
//call Screen.clearScreen 0
@RETURN_Screen.clearScreen_4
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.clearScreen
0;JMP
(RETURN_Screen.clearScreen_4)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 9
@9
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 6
@6
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//call Screen.setColor 1
@RETURN_Screen.setColor_5
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(RETURN_Screen.setColor_5)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Graphics.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_0
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_0
0;JMP
(LT_0)
@SP
A=M-1
A=A-1
M=-1
(END_LT_0)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Graphics.WHILE_END0
D;JNE
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP1
(Graphics.WHILE_EXP1)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_1
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_1
0;JMP
(LT_1)
@SP
A=M-1
A=A-1
M=-1
(END_LT_1)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
A=M-1
D=M
@SP
M=M-1
@Graphics.WHILE_END1
D;JNE
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//call Math.multiply 2
@RETURN_Math.multiply_6
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_6)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//call Math.multiply 2
@RETURN_Math.multiply_7
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_7)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Screen.drawRectangle 4
@RETURN_Screen.drawRectangle_8
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(RETURN_Screen.drawRectangle_8)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP1
@Graphics.WHILE_EXP1
0;JMP
//label WHILE_END1
(Graphics.WHILE_END1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Graphics.WHILE_EXP0
0;JMP
//label WHILE_END0
(Graphics.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Graphics.Print_Selection_Arrow 10
(Graphics.Print_Selection_Arrow)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@10
D=A
@SP
M=M+D
//push constant 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_9
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_9)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//call Screen.setColor 1
@RETURN_Screen.setColor_10
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(RETURN_Screen.setColor_10)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_11
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_11)
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_12
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_12)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Screen.drawRectangle 4
@RETURN_Screen.drawRectangle_13
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(RETURN_Screen.drawRectangle_13)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Graphics.WHILE_EXP0)
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_2
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_2
0;JMP
(LT_2)
@SP
A=M-1
A=A-1
M=-1
(END_LT_2)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Graphics.WHILE_END0
D;JNE
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 9
@9
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP1
(Graphics.WHILE_EXP1)
//push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_0
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_0
0;JMP
(EQ_0)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_0)
@SP
M=M-1
//push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_3
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_3
0;JMP
(LT_3)
@SP
A=M-1
A=A-1
M=-1
(END_LT_3)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
A=M-1
D=M
@SP
M=M-1
@Graphics.WHILE_END1
D;JNE
//push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawPixel 2
@RETURN_Screen.drawPixel_14
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(RETURN_Screen.drawPixel_14)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 9
@9
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP1
@Graphics.WHILE_EXP1
0;JMP
//label WHILE_END1
(Graphics.WHILE_END1)
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Graphics.WHILE_EXP0
0;JMP
//label WHILE_END0
(Graphics.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Graphics.Print_Piece_Type1 2
(Graphics.Print_Piece_Type1)
@SP
A=M
M=0
A=A+1
M=0
@2
D=A
@SP
M=M+D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Graphics.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_1
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_1
0;JMP
(EQ_1)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_1)
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_1
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_1
0;JMP
(GT_1)
@SP
A=M-1
A=A-1
M=-1
(END_GT_1)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Graphics.WHILE_END0
D;JNE
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@RETURN_Screen.setColor_15
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(RETURN_Screen.setColor_15)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.printCircle 3
@RETURN_Screen.printCircle_16
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.printCircle
0;JMP
(RETURN_Screen.printCircle_16)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Graphics.WHILE_EXP0
0;JMP
//label WHILE_END0
(Graphics.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Keyboard.init 0
(Keyboard.init)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Keyboard.keyPressed 0
(Keyboard.keyPressed)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 24576
@24576
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Memory.peek 1
@RETURN_Memory.peek_17
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(RETURN_Memory.peek_17)
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Keyboard.readChar 2
(Keyboard.readChar)
@SP
A=M
M=0
A=A+1
M=0
@2
D=A
@SP
M=M+D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.printChar 1
@RETURN_Output.printChar_18
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(RETURN_Output.printChar_18)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Keyboard.WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_2
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_2
0;JMP
(EQ_2)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_2)
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_2
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_2
0;JMP
(GT_2)
@SP
A=M-1
A=A-1
M=-1
(END_GT_2)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Keyboard.WHILE_END0
D;JNE
//call Keyboard.keyPressed 0
@RETURN_Keyboard.keyPressed_19
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(RETURN_Keyboard.keyPressed_19)
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_3
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_3
0;JMP
(GT_3)
@SP
A=M-1
A=A-1
M=-1
(END_GT_3)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Keyboard.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Keyboard.IF_FALSE0
0;JMP
//label IF_TRUE0
(Keyboard.IF_TRUE0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Keyboard.IF_FALSE0)
//goto WHILE_EXP0
@Keyboard.WHILE_EXP0
0;JMP
//label WHILE_END0
(Keyboard.WHILE_END0)
//call String.backSpace 0
@RETURN_String.backSpace_20
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(RETURN_String.backSpace_20)
//call Output.printChar 1
@RETURN_Output.printChar_21
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(RETURN_Output.printChar_21)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printChar 1
@RETURN_Output.printChar_22
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(RETURN_Output.printChar_22)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Keyboard.readLine 5
(Keyboard.readLine)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@5
D=A
@SP
M=M+D
//push constant 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@RETURN_String.new_23
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(RETURN_String.new_23)
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printString 1
@RETURN_Output.printString_24
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(RETURN_Output.printString_24)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call String.newLine 0
@RETURN_String.newLine_25
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(RETURN_String.newLine_25)
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call String.backSpace 0
@RETURN_String.backSpace_26
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(RETURN_String.backSpace_26)
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Keyboard.WHILE_EXP0)
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Keyboard.WHILE_END0
D;JNE
//call Keyboard.readChar 0
@RETURN_Keyboard.readChar_27
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readChar
0;JMP
(RETURN_Keyboard.readChar_27)
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_3
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_3
0;JMP
(EQ_3)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_3)
@SP
M=M-1
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Keyboard.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Keyboard.IF_FALSE0
0;JMP
//label IF_TRUE0
(Keyboard.IF_TRUE0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_4
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_4
0;JMP
(EQ_4)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_4)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Keyboard.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Keyboard.IF_FALSE1
0;JMP
//label IF_TRUE1
(Keyboard.IF_TRUE1)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.eraseLastChar 1
@RETURN_String.eraseLastChar_28
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.eraseLastChar
0;JMP
(RETURN_String.eraseLastChar_28)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END1
@Keyboard.IF_END1
0;JMP
//label IF_FALSE1
(Keyboard.IF_FALSE1)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@RETURN_String.appendChar_29
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(RETURN_String.appendChar_29)
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END1
(Keyboard.IF_END1)
//label IF_FALSE0
(Keyboard.IF_FALSE0)
//goto WHILE_EXP0
@Keyboard.WHILE_EXP0
0;JMP
//label WHILE_END0
(Keyboard.WHILE_END0)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Keyboard.readInt 2
(Keyboard.readInt)
@SP
A=M
M=0
A=A+1
M=0
@2
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Keyboard.readLine 1
@RETURN_Keyboard.readLine_30
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readLine
0;JMP
(RETURN_Keyboard.readLine_30)
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.intValue 1
@RETURN_String.intValue_31
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.intValue
0;JMP
(RETURN_String.intValue_31)
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.dispose 1
@RETURN_String.dispose_32
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.dispose
0;JMP
(RETURN_String.dispose_32)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Main.main 0
(Main.main)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//call Graphics.Print_Empty_Board 0
@RETURN_Graphics.Print_Empty_Board_33
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Graphics.Print_Empty_Board
0;JMP
(RETURN_Graphics.Print_Empty_Board_33)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Graphics.Print_Selection_Arrow 2
@RETURN_Graphics.Print_Selection_Arrow_34
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Graphics.Print_Selection_Arrow
0;JMP
(RETURN_Graphics.Print_Selection_Arrow_34)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Graphics.Print_Piece_Type1 2
@RETURN_Graphics.Print_Piece_Type1_35
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Graphics.Print_Piece_Type1
0;JMP
(RETURN_Graphics.Print_Piece_Type1_35)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Math.init 1
(Math.init)
@SP
A=M
M=0
@1
D=A
@SP
M=M+D
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_36
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_36)
//pop static 1
@SP
A=M-1
D=M
@Math.1
M=D
@SP
M=M-1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_37
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_37)
//pop static 0
@SP
A=M-1
D=M
@Math.0
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Math.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_4
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_4
0;JMP
(LT_4)
@SP
A=M-1
A=A-1
M=-1
(END_LT_4)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Math.WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Math.abs 0
(Math.abs)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_5
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_5
0;JMP
(LT_5)
@SP
A=M-1
A=A-1
M=-1
(END_LT_5)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Math.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Math.multiply 5
(Math.multiply)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@5
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_6
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_6
0;JMP
(LT_6)
@SP
A=M-1
A=A-1
M=-1
(END_LT_6)
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_4
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_4
0;JMP
(GT_4)
@SP
A=M-1
A=A-1
M=-1
(END_GT_4)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_5
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_5
0;JMP
(GT_5)
@SP
A=M-1
A=A-1
M=-1
(END_GT_5)
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_7
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_7
0;JMP
(LT_7)
@SP
A=M-1
A=A-1
M=-1
(END_LT_7)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@RETURN_Math.abs_38
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(RETURN_Math.abs_38)
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@RETURN_Math.abs_39
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(RETURN_Math.abs_39)
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_8
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_8
0;JMP
(LT_8)
@SP
A=M-1
A=A-1
M=-1
(END_LT_8)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Math.IF_FALSE0)
//label WHILE_EXP0
(Math.WHILE_EXP0)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_9
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_9
0;JMP
(LT_9)
@SP
A=M-1
A=A-1
M=-1
(END_LT_9)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.WHILE_END0
D;JNE
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_5
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_5
0;JMP
(EQ_5)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_5)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Math.IF_FALSE1
0;JMP
//label IF_TRUE1
(Math.IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(Math.IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Math.WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.WHILE_END0)
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE2
D;JNE
//goto IF_FALSE2
@Math.IF_FALSE2
0;JMP
//label IF_TRUE2
(Math.IF_TRUE2)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE2
(Math.IF_FALSE2)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Math.divide 4
(Math.divide)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@4
D=A
@SP
M=M+D
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_6
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_6
0;JMP
(EQ_6)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_6)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.IF_TRUE0)
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_40
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_40)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Math.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_10
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_10
0;JMP
(LT_10)
@SP
A=M-1
A=A-1
M=-1
(END_LT_10)
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_6
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_6
0;JMP
(GT_6)
@SP
A=M-1
A=A-1
M=-1
(END_GT_6)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_7
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_7
0;JMP
(GT_7)
@SP
A=M-1
A=A-1
M=-1
(END_GT_7)
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_11
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_11
0;JMP
(LT_11)
@SP
A=M-1
A=A-1
M=-1
(END_LT_11)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@RETURN_Math.abs_41
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(RETURN_Math.abs_41)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@RETURN_Math.abs_42
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(RETURN_Math.abs_42)
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Math.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_12
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_12
0;JMP
(LT_12)
@SP
A=M-1
A=A-1
M=-1
(END_LT_12)
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.WHILE_END0
D;JNE
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_13
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_13
0;JMP
(LT_13)
@SP
A=M-1
A=A-1
M=-1
(END_LT_13)
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Math.IF_FALSE1
0;JMP
//label IF_TRUE1
(Math.IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_8
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_8
0;JMP
(GT_8)
@SP
A=M-1
A=A-1
M=-1
(END_GT_8)
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE2
D;JNE
//goto IF_FALSE2
@Math.IF_FALSE2
0;JMP
//label IF_TRUE2
(Math.IF_TRUE2)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE2
(Math.IF_FALSE2)
//label IF_FALSE1
(Math.IF_FALSE1)
//goto WHILE_EXP0
@Math.WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.WHILE_END0)
//label WHILE_EXP1
(Math.WHILE_EXP1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_9
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_9
0;JMP
(GT_9)
@SP
A=M-1
A=A-1
M=-1
(END_GT_9)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
A=M-1
D=M
@SP
M=M-1
@Math.WHILE_END1
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_10
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_10
0;JMP
(GT_10)
@SP
A=M-1
A=A-1
M=-1
(END_GT_10)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE3
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE3
D;JNE
//goto IF_FALSE3
@Math.IF_FALSE3
0;JMP
//label IF_TRUE3
(Math.IF_TRUE3)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE3
(Math.IF_FALSE3)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP1
@Math.WHILE_EXP1
0;JMP
//label WHILE_END1
(Math.WHILE_END1)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE4
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE4
D;JNE
//goto IF_FALSE4
@Math.IF_FALSE4
0;JMP
//label IF_TRUE4
(Math.IF_TRUE4)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE4
(Math.IF_FALSE4)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Math.sqrt 4
(Math.sqrt)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@4
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_14
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_14
0;JMP
(LT_14)
@SP
A=M-1
A=A-1
M=-1
(END_LT_14)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.IF_TRUE0)
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_43
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_43)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Math.IF_FALSE0)
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Math.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_11
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_11
0;JMP
(GT_11)
@SP
A=M-1
A=A-1
M=-1
(END_GT_11)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.WHILE_END0
D;JNE
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_44
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_44)
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_12
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_12
0;JMP
(GT_12)
@SP
A=M-1
A=A-1
M=-1
(END_GT_12)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_15
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_15
0;JMP
(LT_15)
@SP
A=M-1
A=A-1
M=-1
(END_LT_15)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Math.IF_FALSE1
0;JMP
//label IF_TRUE1
(Math.IF_TRUE1)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(Math.IF_FALSE1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Math.WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.WHILE_END0)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Math.max 0
(Math.max)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_13
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_13
0;JMP
(GT_13)
@SP
A=M-1
A=A-1
M=-1
(END_GT_13)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Math.IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Math.min 0
(Math.min)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_16
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_16
0;JMP
(LT_16)
@SP
A=M-1
A=A-1
M=-1
(END_LT_16)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Math.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Math.IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Memory.init 0
(Memory.init)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
A=M-1
D=M
@Memory.0
M=D
@SP
M=M-1
//push constant 2048
@2048
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 14334
@14334
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 2049
@2049
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 2050
@2050
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Memory.peek 0
(Memory.peek)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Memory.poke 0
(Memory.poke)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Memory.alloc 2
(Memory.alloc)
@SP
A=M
M=0
A=A+1
M=0
@2
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_17
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_17
0;JMP
(LT_17)
@SP
A=M-1
A=A-1
M=-1
(END_LT_17)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Memory.IF_FALSE0
0;JMP
//label IF_TRUE0
(Memory.IF_TRUE0)
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_45
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_45)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Memory.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_7
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_7
0;JMP
(EQ_7)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_7)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Memory.IF_FALSE1
0;JMP
//label IF_TRUE1
(Memory.IF_TRUE1)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(Memory.IF_FALSE1)
//push constant 2048
@2048
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Memory.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16383
@16383
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_18
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_18
0;JMP
(LT_18)
@SP
A=M-1
A=A-1
M=-1
(END_LT_18)
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_19
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_19
0;JMP
(LT_19)
@SP
A=M-1
A=A-1
M=-1
(END_LT_19)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.WHILE_END0
D;JNE
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_8
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_8
0;JMP
(EQ_8)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_8)
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16382
@16382
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_14
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_14
0;JMP
(GT_14)
@SP
A=M-1
A=A-1
M=-1
(END_GT_14)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_9
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_9
0;JMP
(EQ_9)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_9)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE2
D;JNE
//goto IF_FALSE2
@Memory.IF_FALSE2
0;JMP
//label IF_TRUE2
(Memory.IF_TRUE2)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END2
@Memory.IF_END2
0;JMP
//label IF_FALSE2
(Memory.IF_FALSE2)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_10
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_10
0;JMP
(EQ_10)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_10)
@SP
M=M-1
//if-goto IF_TRUE3
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE3
D;JNE
//goto IF_FALSE3
@Memory.IF_FALSE3
0;JMP
//label IF_TRUE3
(Memory.IF_TRUE3)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END3
@Memory.IF_END3
0;JMP
//label IF_FALSE3
(Memory.IF_FALSE3)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END3
(Memory.IF_END3)
//label IF_END2
(Memory.IF_END2)
//goto WHILE_EXP0
@Memory.WHILE_EXP0
0;JMP
//label WHILE_END0
(Memory.WHILE_END0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 16379
@16379
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_15
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_15
0;JMP
(GT_15)
@SP
A=M-1
A=A-1
M=-1
(END_GT_15)
@SP
M=M-1
//if-goto IF_TRUE4
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE4
D;JNE
//goto IF_FALSE4
@Memory.IF_FALSE4
0;JMP
//label IF_TRUE4
(Memory.IF_TRUE4)
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_46
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_46)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE4
(Memory.IF_FALSE4)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_16
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_16
0;JMP
(GT_16)
@SP
A=M-1
A=A-1
M=-1
(END_GT_16)
@SP
M=M-1
//if-goto IF_TRUE5
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE5
D;JNE
//goto IF_FALSE5
@Memory.IF_FALSE5
0;JMP
//label IF_TRUE5
(Memory.IF_TRUE5)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_11
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_11
0;JMP
(EQ_11)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_11)
@SP
M=M-1
//if-goto IF_TRUE6
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE6
D;JNE
//goto IF_FALSE6
@Memory.IF_FALSE6
0;JMP
//label IF_TRUE6
(Memory.IF_TRUE6)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END6
@Memory.IF_END6
0;JMP
//label IF_FALSE6
(Memory.IF_FALSE6)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END6
(Memory.IF_END6)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE5
(Memory.IF_FALSE5)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Memory.deAlloc 2
(Memory.deAlloc)
@SP
A=M
M=0
A=A+1
M=0
@2
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_12
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_12
0;JMP
(EQ_12)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_12)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Memory.IF_FALSE0
0;JMP
//label IF_TRUE0
(Memory.IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END0
@Memory.IF_END0
0;JMP
//label IF_FALSE0
(Memory.IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_13
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_13
0;JMP
(EQ_13)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_13)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Memory.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Memory.IF_FALSE1
0;JMP
//label IF_TRUE1
(Memory.IF_TRUE1)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END1
@Memory.IF_END1
0;JMP
//label IF_FALSE1
(Memory.IF_FALSE1)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END1
(Memory.IF_END1)
//label IF_END0
(Memory.IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.init 0
(Output.init)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 16384
@16384
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 4
@SP
A=M-1
D=M
@Output.4
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
A=M-1
D=M
@Output.2
M=D
@SP
M=M-1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
A=M-1
D=M
@Output.0
M=D
@SP
M=M-1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@RETURN_String.new_47
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(RETURN_String.new_47)
//pop static 3
@SP
A=M-1
D=M
@Output.3
M=D
@SP
M=M-1
//call Output.initMap 0
@RETURN_Output.initMap_48
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.initMap
0;JMP
(RETURN_Output.initMap_48)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Output.createShiftedMap 0
@RETURN_Output.createShiftedMap_49
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.createShiftedMap
0;JMP
(RETURN_Output.createShiftedMap_49)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.initMap 0
(Output.initMap)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_50
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_50)
//pop static 5
@SP
A=M-1
D=M
@Output.5
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_51
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_51)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_52
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_52)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 33
@33
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_53
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_53)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 34
@34
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_54
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_54)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_55
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_55)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 36
@36
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_56
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_56)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 37
@37
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_57
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_57)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_58
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_58)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 39
@39
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_59
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_59)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_60
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_60)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 41
@41
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_61
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_61)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 42
@42
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_62
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_62)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_63
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_63)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_64
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_64)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_65
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_65)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_66
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_66)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 47
@47
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_67
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_67)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_68
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_68)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_69
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_69)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_70
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_70)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_71
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_71)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 52
@52
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 26
@26
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_72
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_72)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_73
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_73)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_74
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_74)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_75
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_75)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_76
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_76)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_77
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_77)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_78
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_78)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_79
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_79)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_80
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_80)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 61
@61
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_81
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_81)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_82
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_82)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 64
@64
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_83
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_83)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_84
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_84)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_85
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_85)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 66
@66
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_86
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_86)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_87
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_87)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 68
@68
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_88
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_88)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_89
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_89)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 70
@70
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_90
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_90)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_91
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_91)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_92
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_92)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_93
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_93)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 74
@74
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_94
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_94)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 75
@75
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_95
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_95)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 76
@76
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_96
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_96)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 33
@33
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_97
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_97)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 78
@78
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_98
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_98)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_99
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_99)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_100
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_100)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 81
@81
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_101
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_101)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_102
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_102)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_103
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_103)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_104
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_104)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 85
@85
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_105
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_105)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 86
@86
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_106
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_106)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 87
@87
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_107
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_107)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 88
@88
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_108
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_108)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 89
@89
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_109
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_109)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_110
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_110)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 91
@91
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_111
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_111)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 92
@92
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_112
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_112)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 93
@93
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_113
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_113)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 94
@94
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_114
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_114)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 95
@95
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_115
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_115)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 96
@96
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_116
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_116)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_117
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_117)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 98
@98
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_118
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_118)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_119
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_119)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_120
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_120)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_121
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_121)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 102
@102
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_122
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_122)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 103
@103
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_123
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_123)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 104
@104
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_124
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_124)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 105
@105
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_125
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_125)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 106
@106
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_126
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_126)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 107
@107
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_127
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_127)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 108
@108
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_128
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_128)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 109
@109
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 29
@29
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_129
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_129)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 29
@29
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_130
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_130)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_131
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_131)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_132
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_132)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 113
@113
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_133
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_133)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 114
@114
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 29
@29
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_134
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_134)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 115
@115
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_135
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_135)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_136
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_136)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 117
@117
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_137
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_137)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 118
@118
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_138
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_138)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 119
@119
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_139
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_139)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 120
@120
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_140
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_140)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 121
@121
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_141
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_141)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 122
@122
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_142
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_142)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_143
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_143)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 124
@124
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_144
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_144)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 125
@125
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_145
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_145)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 126
@126
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@RETURN_Output.create_146
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(RETURN_Output.create_146)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.create 1
(Output.create)
@SP
A=M
M=0
@1
D=A
@SP
M=M+D
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_147
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_147)
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 5
@Output.5
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 4
@4
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 5
@5
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 6
@6
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 7
@7
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 8
@8
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 9
@9
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 10
@10
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 11
@11
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.createShiftedMap 4
(Output.createShiftedMap)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@4
D=A
@SP
M=M+D
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_148
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_148)
//pop static 6
@SP
A=M-1
D=M
@Output.6
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Output.WHILE_EXP0)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_20
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_20
0;JMP
(LT_20)
@SP
A=M-1
A=A-1
M=-1
(END_LT_20)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.WHILE_END0
D;JNE
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 5
@Output.5
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_149
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_149)
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 6
@Output.6
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP1
(Output.WHILE_EXP1)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_21
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_21
0;JMP
(LT_21)
@SP
A=M-1
A=A-1
M=-1
(END_LT_21)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
A=M-1
D=M
@SP
M=M-1
@Output.WHILE_END1
D;JNE
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_150
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_150)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP1
@Output.WHILE_EXP1
0;JMP
//label WHILE_END1
(Output.WHILE_END1)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_14
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_14
0;JMP
(EQ_14)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_14)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.IF_TRUE0)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END0
@Output.IF_END0
0;JMP
//label IF_FALSE0
(Output.IF_FALSE0)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END0
(Output.IF_END0)
//goto WHILE_EXP0
@Output.WHILE_EXP0
0;JMP
//label WHILE_END0
(Output.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.getMap 1
(Output.getMap)
@SP
A=M
M=0
@1
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_22
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_22
0;JMP
(LT_22)
@SP
A=M-1
A=A-1
M=-1
(END_LT_22)
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 126
@126
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_17
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_17
0;JMP
(GT_17)
@SP
A=M-1
A=A-1
M=-1
(END_GT_17)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Output.IF_FALSE0)
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Output.IF_FALSE1
0;JMP
//label IF_TRUE1
(Output.IF_TRUE1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 5
@Output.5
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END1
@Output.IF_END1
0;JMP
//label IF_FALSE1
(Output.IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 6
@Output.6
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END1
(Output.IF_END1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.drawChar 4
(Output.drawChar)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@4
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.getMap 1
@RETURN_Output.getMap_151
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.getMap
0;JMP
(RETURN_Output.getMap_151)
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Output.WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_23
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_23
0;JMP
(LT_23)
@SP
A=M-1
A=A-1
M=-1
(END_LT_23)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.WHILE_END0
D;JNE
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.IF_TRUE0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 4
@Output.4
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END0
@Output.IF_END0
0;JMP
//label IF_FALSE0
(Output.IF_FALSE0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 4
@Output.4
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END0
(Output.IF_END0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 4
@Output.4
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Output.WHILE_EXP0
0;JMP
//label WHILE_END0
(Output.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.moveCursor 0
(Output.moveCursor)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_24
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_24
0;JMP
(LT_24)
@SP
A=M-1
A=A-1
M=-1
(END_LT_24)
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 22
@22
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_18
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_18
0;JMP
(GT_18)
@SP
A=M-1
A=A-1
M=-1
(END_GT_18)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_25
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_25
0;JMP
(LT_25)
@SP
A=M-1
A=A-1
M=-1
(END_LT_25)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_19
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_19
0;JMP
(GT_19)
@SP
A=M-1
A=A-1
M=-1
(END_GT_19)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.IF_TRUE0)
//push constant 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_152
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_152)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Output.IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_153
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_153)
//pop static 0
@SP
A=M-1
D=M
@Output.0
M=D
@SP
M=M-1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 352
@352
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_154
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_154)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_155
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_155)
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_15
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_15
0;JMP
(EQ_15)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_15)
@SP
M=M-1
//pop static 2
@SP
A=M-1
D=M
@Output.2
M=D
@SP
M=M-1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.drawChar 1
@RETURN_Output.drawChar_156
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(RETURN_Output.drawChar_156)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.printChar 0
(Output.printChar)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.newLine 0
@RETURN_String.newLine_157
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(RETURN_String.newLine_157)
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_16
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_16
0;JMP
(EQ_16)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_16)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.IF_TRUE0)
//call Output.println 0
@RETURN_Output.println_158
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(RETURN_Output.println_158)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END0
@Output.IF_END0
0;JMP
//label IF_FALSE0
(Output.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.backSpace 0
@RETURN_String.backSpace_159
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(RETURN_String.backSpace_159)
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_17
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_17
0;JMP
(EQ_17)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_17)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Output.IF_FALSE1
0;JMP
//label IF_TRUE1
(Output.IF_TRUE1)
//call Output.backSpace 0
@RETURN_Output.backSpace_160
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.backSpace
0;JMP
(RETURN_Output.backSpace_160)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END1
@Output.IF_END1
0;JMP
//label IF_FALSE1
(Output.IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.drawChar 1
@RETURN_Output.drawChar_161
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(RETURN_Output.drawChar_161)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE2
D;JNE
//goto IF_FALSE2
@Output.IF_FALSE2
0;JMP
//label IF_TRUE2
(Output.IF_TRUE2)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop static 0
@SP
A=M-1
D=M
@Output.0
M=D
@SP
M=M-1
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//label IF_FALSE2
(Output.IF_FALSE2)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_18
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_18
0;JMP
(EQ_18)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_18)
@SP
M=M-1
//if-goto IF_TRUE3
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE3
D;JNE
//goto IF_FALSE3
@Output.IF_FALSE3
0;JMP
//label IF_TRUE3
(Output.IF_TRUE3)
//call Output.println 0
@RETURN_Output.println_162
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(RETURN_Output.println_162)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END3
@Output.IF_END3
0;JMP
//label IF_FALSE3
(Output.IF_FALSE3)
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
A=M-1
D=M
@Output.2
M=D
@SP
M=M-1
//label IF_END3
(Output.IF_END3)
//label IF_END1
(Output.IF_END1)
//label IF_END0
(Output.IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.printString 2
(Output.printString)
@SP
A=M
M=0
A=A+1
M=0
@2
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.length 1
@RETURN_String.length_163
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(RETURN_String.length_163)
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Output.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_26
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_26
0;JMP
(LT_26)
@SP
A=M-1
A=A-1
M=-1
(END_LT_26)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.WHILE_END0
D;JNE
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.charAt 2
@RETURN_String.charAt_164
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(RETURN_String.charAt_164)
//call Output.printChar 1
@RETURN_Output.printChar_165
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(RETURN_Output.printChar_165)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Output.WHILE_EXP0
0;JMP
//label WHILE_END0
(Output.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.printInt 0
(Output.printInt)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push static 3
@Output.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.setInt 2
@RETURN_String.setInt_166
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setInt
0;JMP
(RETURN_String.setInt_166)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push static 3
@Output.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printString 1
@RETURN_Output.printString_167
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(RETURN_Output.printString_167)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.println 0
(Output.println)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 352
@352
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
A=M-1
D=M
@Output.0
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
A=M-1
D=M
@Output.2
M=D
@SP
M=M-1
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 8128
@8128
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_19
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_19
0;JMP
(EQ_19)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_19)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.IF_TRUE0)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//label IF_FALSE0
(Output.IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Output.backSpace 0
(Output.backSpace)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.IF_TRUE0)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_20
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_20
0;JMP
(GT_20)
@SP
A=M-1
A=A-1
M=-1
(END_GT_20)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Output.IF_FALSE1
0;JMP
//label IF_TRUE1
(Output.IF_TRUE1)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop static 0
@SP
A=M-1
D=M
@Output.0
M=D
@SP
M=M-1
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//goto IF_END1
@Output.IF_END1
0;JMP
//label IF_FALSE1
(Output.IF_FALSE1)
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
A=M-1
D=M
@Output.0
M=D
@SP
M=M-1
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_20
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_20
0;JMP
(EQ_20)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_20)
@SP
M=M-1
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@Output.IF_TRUE2
D;JNE
//goto IF_FALSE2
@Output.IF_FALSE2
0;JMP
//label IF_TRUE2
(Output.IF_TRUE2)
//push constant 8128
@8128
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//label IF_FALSE2
(Output.IF_FALSE2)
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 321
@321
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop static 1
@SP
A=M-1
D=M
@Output.1
M=D
@SP
M=M-1
//label IF_END1
(Output.IF_END1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@SP
A=M-1
D=M
@Output.2
M=D
@SP
M=M-1
//goto IF_END0
@Output.IF_END0
0;JMP
//label IF_FALSE0
(Output.IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
A=M-1
D=M
@Output.2
M=D
@SP
M=M-1
//label IF_END0
(Output.IF_END0)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.drawChar 1
@RETURN_Output.drawChar_168
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(RETURN_Output.drawChar_168)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Piece.new 0
(Piece.new)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Memory.alloc 1
@RETURN_Memory.alloc_169
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(RETURN_Memory.alloc_169)
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 0
@0
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.init 1
(Screen.init)
@SP
A=M
M=0
@1
D=A
@SP
M=M+D
//push constant 16384
@16384
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
A=M-1
D=M
@Screen.1
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
A=M-1
D=M
@Screen.2
M=D
@SP
M=M-1
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_170
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_170)
//pop static 0
@SP
A=M-1
D=M
@Screen.0
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Screen.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_27
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_27
0;JMP
(LT_27)
@SP
A=M-1
A=A-1
M=-1
(END_LT_27)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Screen.WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.clearScreen 1
(Screen.clearScreen)
@SP
A=M
M=0
@1
D=A
@SP
M=M+D
//label WHILE_EXP0
(Screen.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 8192
@8192
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_28
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_28
0;JMP
(LT_28)
@SP
A=M-1
A=A-1
M=-1
(END_LT_28)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Screen.WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.updateLocation 0
(Screen.updateLocation)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push static 2
@Screen.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END0
@Screen.IF_END0
0;JMP
//label IF_FALSE0
(Screen.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END0
(Screen.IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.setColor 0
(Screen.setColor)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@SP
A=M-1
D=M
@Screen.2
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.drawPixel 3
(Screen.drawPixel)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
@3
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_29
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_29
0;JMP
(LT_29)
@SP
A=M-1
A=A-1
M=-1
(END_LT_29)
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_21
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_21
0;JMP
(GT_21)
@SP
A=M-1
A=A-1
M=-1
(END_GT_21)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_30
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_30
0;JMP
(LT_30)
@SP
A=M-1
A=A-1
M=-1
(END_LT_30)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_22
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_22
0;JMP
(GT_22)
@SP
A=M-1
A=A-1
M=-1
(END_GT_22)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.IF_TRUE0)
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_171
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_171)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Screen.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_172
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_172)
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_173
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_173)
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_174
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_174)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_175
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_175)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.drawConditional 0
(Screen.drawConditional)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.IF_TRUE0)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawPixel 2
@RETURN_Screen.drawPixel_176
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(RETURN_Screen.drawPixel_176)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END0
@Screen.IF_END0
0;JMP
//label IF_FALSE0
(Screen.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawPixel 2
@RETURN_Screen.drawPixel_177
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(RETURN_Screen.drawPixel_177)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END0
(Screen.IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.drawLine 11
(Screen.drawLine)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@11
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_31
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_31
0;JMP
(LT_31)
@SP
A=M-1
A=A-1
M=-1
(END_LT_31)
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_23
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_23
0;JMP
(GT_23)
@SP
A=M-1
A=A-1
M=-1
(END_GT_23)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_32
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_32
0;JMP
(LT_32)
@SP
A=M-1
A=A-1
M=-1
(END_LT_32)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_24
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_24
0;JMP
(GT_24)
@SP
A=M-1
A=A-1
M=-1
(END_GT_24)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.IF_TRUE0)
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_178
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_178)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Screen.IF_FALSE0)
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Math.abs 1
@RETURN_Math.abs_179
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(RETURN_Math.abs_179)
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Math.abs 1
@RETURN_Math.abs_180
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(RETURN_Math.abs_180)
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_33
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_33
0;JMP
(LT_33)
@SP
A=M-1
A=A-1
M=-1
(END_LT_33)
@SP
M=M-1
//pop local 6
@6
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_34
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_34
0;JMP
(LT_34)
@SP
A=M-1
A=A-1
M=-1
(END_LT_34)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_35
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_35
0;JMP
(LT_35)
@SP
A=M-1
A=A-1
M=-1
(END_LT_35)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.IF_TRUE1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 2
@2
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 3
@3
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(Screen.IF_FALSE1)
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE2
D;JNE
//goto IF_FALSE2
@Screen.IF_FALSE2
0;JMP
//label IF_TRUE2
(Screen.IF_TRUE2)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_25
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_25
0;JMP
(GT_25)
@SP
A=M-1
A=A-1
M=-1
(END_GT_25)
@SP
M=M-1
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END2
@Screen.IF_END2
0;JMP
//label IF_FALSE2
(Screen.IF_FALSE2)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_26
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_26
0;JMP
(GT_26)
@SP
A=M-1
A=A-1
M=-1
(END_GT_26)
@SP
M=M-1
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END2
(Screen.IF_END2)
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_181
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_181)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_182
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_182)
//pop local 9
@9
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Math.multiply 2
@RETURN_Math.multiply_183
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_183)
//pop local 10
@10
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawConditional 3
@RETURN_Screen.drawConditional_184
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(RETURN_Screen.drawConditional_184)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Screen.WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_36
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_36
0;JMP
(LT_36)
@SP
A=M-1
A=A-1
M=-1
(END_LT_36)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.WHILE_END0
D;JNE
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_37
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_37
0;JMP
(LT_37)
@SP
A=M-1
A=A-1
M=-1
(END_LT_37)
@SP
M=M-1
//if-goto IF_TRUE3
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE3
D;JNE
//goto IF_FALSE3
@Screen.IF_FALSE3
0;JMP
//label IF_TRUE3
(Screen.IF_TRUE3)
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END3
@Screen.IF_END3
0;JMP
//label IF_FALSE3
(Screen.IF_FALSE3)
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 10
@10
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE4
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE4
D;JNE
//goto IF_FALSE4
@Screen.IF_FALSE4
0;JMP
//label IF_TRUE4
(Screen.IF_TRUE4)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END4
@Screen.IF_END4
0;JMP
//label IF_FALSE4
(Screen.IF_FALSE4)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END4
(Screen.IF_END4)
//label IF_END3
(Screen.IF_END3)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawConditional 3
@RETURN_Screen.drawConditional_185
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(RETURN_Screen.drawConditional_185)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Screen.WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.drawRectangle 9
(Screen.drawRectangle)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@9
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_27
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_27
0;JMP
(GT_27)
@SP
A=M-1
A=A-1
M=-1
(END_GT_27)
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_28
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_28
0;JMP
(GT_28)
@SP
A=M-1
A=A-1
M=-1
(END_GT_28)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_38
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_38
0;JMP
(LT_38)
@SP
A=M-1
A=A-1
M=-1
(END_LT_38)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_29
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_29
0;JMP
(GT_29)
@SP
A=M-1
A=A-1
M=-1
(END_GT_29)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_39
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_39
0;JMP
(LT_39)
@SP
A=M-1
A=A-1
M=-1
(END_LT_39)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_30
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_30
0;JMP
(GT_30)
@SP
A=M-1
A=A-1
M=-1
(END_GT_30)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.IF_TRUE0)
//push constant 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_186
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_186)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Screen.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_187
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_187)
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_188
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_188)
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_189
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_189)
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_190
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_190)
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//pop local 6
@6
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_191
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_191)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Screen.WHILE_EXP0)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_31
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_31
0;JMP
(GT_31)
@SP
A=M-1
A=A-1
M=-1
(END_GT_31)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_21
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_21
0;JMP
(EQ_21)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_21)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_192
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_192)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END1
@Screen.IF_END1
0;JMP
//label IF_FALSE1
(Screen.IF_FALSE1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_193
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_193)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP1
(Screen.WHILE_EXP1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_40
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_40
0;JMP
(LT_40)
@SP
A=M-1
A=A-1
M=-1
(END_LT_40)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.WHILE_END1
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_194
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_194)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP1
@Screen.WHILE_EXP1
0;JMP
//label WHILE_END1
(Screen.WHILE_END1)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_195
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_195)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END1
(Screen.IF_END1)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Screen.WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.drawHorizontal 11
(Screen.drawHorizontal)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@11
D=A
@SP
M=M+D
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.min 2
@RETURN_Math.min_196
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(RETURN_Math.min_196)
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.max 2
@RETURN_Math.max_197
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(RETURN_Math.max_197)
//pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_32
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_32
0;JMP
(GT_32)
@SP
A=M-1
A=A-1
M=-1
(END_GT_32)
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_41
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_41
0;JMP
(LT_41)
@SP
A=M-1
A=A-1
M=-1
(END_LT_41)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 512
@512
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_42
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_42
0;JMP
(LT_42)
@SP
A=M-1
A=A-1
M=-1
(END_LT_42)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_33
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_33
0;JMP
(GT_33)
@SP
A=M-1
A=A-1
M=-1
(END_GT_33)
@SP
M=M-1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.IF_TRUE0)
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.max 2
@RETURN_Math.max_198
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(RETURN_Math.max_198)
//pop local 7
@7
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.min 2
@RETURN_Math.min_199
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(RETURN_Math.min_199)
//pop local 8
@8
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_200
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_200)
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 7
@7
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_201
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_201)
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 9
@9
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_202
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_202)
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 8
@8
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_203
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_203)
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 10
@10
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 9
@9
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//pop local 5
@5
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 10
@10
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_204
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_204)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 6
@6
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 6
@6
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_22
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_22
0;JMP
(EQ_22)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_22)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_205
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_205)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END1
@Screen.IF_END1
0;JMP
//label IF_FALSE1
(Screen.IF_FALSE1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_206
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_206)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Screen.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_43
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_43
0;JMP
(LT_43)
@SP
A=M-1
A=A-1
M=-1
(END_LT_43)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_207
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_207)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Screen.WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.WHILE_END0)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@RETURN_Screen.updateLocation_208
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(RETURN_Screen.updateLocation_208)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END1
(Screen.IF_END1)
//label IF_FALSE0
(Screen.IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.drawSymetric 0
(Screen.drawSymetric)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Screen.drawHorizontal 3
@RETURN_Screen.drawHorizontal_209
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(RETURN_Screen.drawHorizontal_209)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Screen.drawHorizontal 3
@RETURN_Screen.drawHorizontal_210
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(RETURN_Screen.drawHorizontal_210)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//call Screen.drawHorizontal 3
@RETURN_Screen.drawHorizontal_211
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(RETURN_Screen.drawHorizontal_211)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//call Screen.drawHorizontal 3
@RETURN_Screen.drawHorizontal_212
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(RETURN_Screen.drawHorizontal_212)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Screen.drawCircle 3
(Screen.drawCircle)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
@3
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_44
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_44
0;JMP
(LT_44)
@SP
A=M-1
A=A-1
M=-1
(END_LT_44)
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_34
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_34
0;JMP
(GT_34)
@SP
A=M-1
A=A-1
M=-1
(END_GT_34)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_45
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_45
0;JMP
(LT_45)
@SP
A=M-1
A=A-1
M=-1
(END_LT_45)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_35
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_35
0;JMP
(GT_35)
@SP
A=M-1
A=A-1
M=-1
(END_GT_35)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.IF_TRUE0)
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_213
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_213)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Screen.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_46
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_46
0;JMP
(LT_46)
@SP
A=M-1
A=A-1
M=-1
(END_LT_46)
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_36
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_36
0;JMP
(GT_36)
@SP
A=M-1
A=A-1
M=-1
(END_GT_36)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_47
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_47
0;JMP
(LT_47)
@SP
A=M-1
A=A-1
M=-1
(END_LT_47)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_37
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_37
0;JMP
(GT_37)
@SP
A=M-1
A=A-1
M=-1
(END_GT_37)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.IF_TRUE1)
//push constant 13
@13
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_214
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_214)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(Screen.IF_FALSE1)
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawSymetric 4
@RETURN_Screen.drawSymetric_215
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(RETURN_Screen.drawSymetric_215)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(Screen.WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_38
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_38
0;JMP
(GT_38)
@SP
A=M-1
A=A-1
M=-1
(END_GT_38)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.WHILE_END0
D;JNE
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_48
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_48
0;JMP
(LT_48)
@SP
A=M-1
A=A-1
M=-1
(END_LT_48)
@SP
M=M-1
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@Screen.IF_TRUE2
D;JNE
//goto IF_FALSE2
@Screen.IF_FALSE2
0;JMP
//label IF_TRUE2
(Screen.IF_TRUE2)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_216
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_216)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END2
@Screen.IF_END2
0;JMP
//label IF_FALSE2
(Screen.IF_FALSE2)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Math.multiply 2
@RETURN_Math.multiply_217
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_217)
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_END2
(Screen.IF_END2)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawSymetric 4
@RETURN_Screen.drawSymetric_218
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(RETURN_Screen.drawSymetric_218)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Screen.WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.new 0
(String.new)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Memory.alloc 1
@RETURN_Memory.alloc_219
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(RETURN_Memory.alloc_219)
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_49
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_49
0;JMP
(LT_49)
@SP
A=M-1
A=A-1
M=-1
(END_LT_49)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_220
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_220)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(String.IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_39
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_39
0;JMP
(GT_39)
@SP
A=M-1
A=A-1
M=-1
(END_GT_39)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE1
D;JNE
//goto IF_FALSE1
@String.IF_FALSE1
0;JMP
//label IF_TRUE1
(String.IF_TRUE1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_221
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_221)
//pop this 1
@1
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(String.IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 0
@0
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.dispose 0
(String.dispose)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_40
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_40
0;JMP
(GT_40)
@SP
A=M-1
A=A-1
M=-1
(END_GT_40)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Array.dispose 1
@RETURN_Array.dispose_222
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(RETURN_Array.dispose_222)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(String.IF_FALSE0)
//push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.deAlloc 1
@RETURN_Memory.deAlloc_223
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(RETURN_Memory.deAlloc_223)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.length 0
(String.length)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.charAt 0
(String.charAt)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_50
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_50
0;JMP
(LT_50)
@SP
A=M-1
A=A-1
M=-1
(END_LT_50)
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_41
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_41
0;JMP
(GT_41)
@SP
A=M-1
A=A-1
M=-1
(END_GT_41)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_23
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_23
0;JMP
(EQ_23)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_23)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_224
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_224)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(String.IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.setCharAt 0
(String.setCharAt)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_51
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_51
0;JMP
(LT_51)
@SP
A=M-1
A=A-1
M=-1
(END_LT_51)
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_42
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_42
0;JMP
(GT_42)
@SP
A=M-1
A=A-1
M=-1
(END_GT_42)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_24
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_24
0;JMP
(EQ_24)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_24)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_225
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_225)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(String.IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 2
@2
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.appendChar 0
(String.appendChar)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_25
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_25
0;JMP
(EQ_25)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_25)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_226
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_226)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(String.IF_FALSE0)
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.eraseLastChar 0
(String.eraseLastChar)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_26
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_26
0;JMP
(EQ_26)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_26)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_227
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_227)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(String.IF_FALSE0)
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.intValue 5
(String.intValue)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@5
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_27
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_27
0;JMP
(EQ_27)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_27)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//label IF_FALSE0
(String.IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_28
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_28
0;JMP
(EQ_28)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_28)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE1
D;JNE
//goto IF_FALSE1
@String.IF_FALSE1
0;JMP
//label IF_TRUE1
(String.IF_TRUE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop local 4
@4
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(String.IF_FALSE1)
//label WHILE_EXP0
(String.WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_52
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_52
0;JMP
(LT_52)
@SP
A=M-1
A=A-1
M=-1
(END_LT_52)
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@String.WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_53
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_53
0;JMP
(LT_53)
@SP
A=M-1
A=A-1
M=-1
(END_LT_53)
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_43
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_43
0;JMP
(GT_43)
@SP
A=M-1
A=A-1
M=-1
(END_GT_43)
@SP
M=M-1
//or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE2
D;JNE
//goto IF_FALSE2
@String.IF_FALSE2
0;JMP
//label IF_TRUE2
(String.IF_TRUE2)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_228
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_228)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE2
(String.IF_FALSE2)
//goto WHILE_EXP0
@String.WHILE_EXP0
0;JMP
//label WHILE_END0
(String.WHILE_END0)
//push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE3
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE3
D;JNE
//goto IF_FALSE3
@String.IF_FALSE3
0;JMP
//label IF_TRUE3
(String.IF_TRUE3)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE3
(String.IF_FALSE3)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.setInt 4
(String.setInt)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
@4
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@SP
A=M-1
D=M
@3
M=D
@SP
M=M-1
//push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_29
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_29
0;JMP
(EQ_29)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_29)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.IF_FALSE0
0;JMP
//label IF_TRUE0
(String.IF_TRUE0)
//push constant 19
@19
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_229
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_229)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(String.IF_FALSE0)
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@RETURN_Array.new_230
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(RETURN_Array.new_230)
//pop local 2
@2
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_54
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_54
0;JMP
(LT_54)
@SP
A=M-1
A=A-1
M=-1
(END_LT_54)
@SP
M=M-1
//if-goto IF_TRUE1
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE1
D;JNE
//goto IF_FALSE1
@String.IF_FALSE1
0;JMP
//label IF_TRUE1
(String.IF_TRUE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//pop local 3
@3
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE1
(String.IF_FALSE1)
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP0
(String.WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_44
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_44
0;JMP
(GT_44)
@SP
A=M-1
A=A-1
M=-1
(END_GT_44)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@String.WHILE_END0
D;JNE
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@RETURN_Math.divide_231
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(RETURN_Math.divide_231)
//pop local 1
@1
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@RETURN_Math.multiply_232
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(RETURN_Math.multiply_232)
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@String.WHILE_EXP0
0;JMP
//label WHILE_END0
(String.WHILE_END0)
//push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE2
D;JNE
//goto IF_FALSE2
@String.IF_FALSE2
0;JMP
//label IF_TRUE2
(String.IF_TRUE2)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE2
(String.IF_FALSE2)
//push this 0
@0
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_55
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_55
0;JMP
(LT_55)
@SP
A=M-1
A=A-1
M=-1
(END_LT_55)
@SP
M=M-1
//if-goto IF_TRUE3
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE3
D;JNE
//goto IF_FALSE3
@String.IF_FALSE3
0;JMP
//label IF_TRUE3
(String.IF_TRUE3)
//push constant 19
@19
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_233
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_233)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE3
(String.IF_FALSE3)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
A=M-1
D=M
A=A-1
D=D-M
@EQ_30
D;JEQ
@SP
A=M-1
A=A-1
M=0
@END_EQ_30
0;JMP
(EQ_30)
@SP
A=M-1
A=A-1
M=-1
(END_EQ_30)
@SP
M=M-1
//if-goto IF_TRUE4
@SP
A=M-1
D=M
@SP
M=M-1
@String.IF_TRUE4
D;JNE
//goto IF_FALSE4
@String.IF_FALSE4
0;JMP
//label IF_TRUE4
(String.IF_TRUE4)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto IF_END4
@String.IF_END4
0;JMP
//label IF_FALSE4
(String.IF_FALSE4)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP1
(String.WHILE_EXP1)
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_56
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_56
0;JMP
(LT_56)
@SP
A=M-1
A=A-1
M=-1
(END_LT_56)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
A=M-1
D=M
@SP
M=M-1
@String.WHILE_END1
D;JNE
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push that 0
@0
D=A
@THAT
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//pop pointer 1
@SP
A=M-1
D=M
@4
M=D
@SP
M=M-1
//push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push this 2
@2
D=A
@THIS
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//pop this 2
@2
D=A
@THIS
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP1
@String.WHILE_EXP1
0;JMP
//label WHILE_END1
(String.WHILE_END1)
//label IF_END4
(String.IF_END4)
//push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Array.dispose 1
@RETURN_Array.dispose_234
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(RETURN_Array.dispose_234)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.newLine 0
(String.newLine)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 128
@128
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.backSpace 0
(String.backSpace)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 129
@129
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function String.doubleQuote 0
(String.doubleQuote)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 34
@34
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Sys.init 0
(Sys.init)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//call Memory.init 0
@RETURN_Memory.init_235
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.init
0;JMP
(RETURN_Memory.init_235)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Math.init 0
@RETURN_Math.init_236
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.init
0;JMP
(RETURN_Math.init_236)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Screen.init 0
@RETURN_Screen.init_237
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.init
0;JMP
(RETURN_Screen.init_237)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Output.init 0
@RETURN_Output.init_238
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.init
0;JMP
(RETURN_Output.init_238)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Keyboard.init 0
@RETURN_Keyboard.init_239
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.init
0;JMP
(RETURN_Keyboard.init_239)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Main.main 0
@RETURN_Main.main_240
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.main
0;JMP
(RETURN_Main.main_240)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Sys.halt 0
@RETURN_Sys.halt_241
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(RETURN_Sys.halt_241)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Sys.halt 0
(Sys.halt)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//label WHILE_EXP0
(Sys.WHILE_EXP0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Sys.WHILE_END0
D;JNE
//goto WHILE_EXP0
@Sys.WHILE_EXP0
0;JMP
//label WHILE_END0
(Sys.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Sys.wait 1
(Sys.wait)
@SP
A=M
M=0
@1
D=A
@SP
M=M+D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
A=A-1
D=D-M
@LT_57
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_LT_57
0;JMP
(LT_57)
@SP
A=M-1
A=A-1
M=-1
(END_LT_57)
@SP
M=M-1
//if-goto IF_TRUE0
@SP
A=M-1
D=M
@SP
M=M-1
@Sys.IF_TRUE0
D;JNE
//goto IF_FALSE0
@Sys.IF_FALSE0
0;JMP
//label IF_TRUE0
(Sys.IF_TRUE0)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@RETURN_Sys.error_242
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(RETURN_Sys.error_242)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label IF_FALSE0
(Sys.IF_FALSE0)
//label WHILE_EXP0
(Sys.WHILE_EXP0)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_45
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_45
0;JMP
(GT_45)
@SP
A=M-1
A=A-1
M=-1
(END_GT_45)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
A=M-1
D=M
@SP
M=M-1
@Sys.WHILE_END0
D;JNE
//push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//label WHILE_EXP1
(Sys.WHILE_EXP1)
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@GT_46
D;JGT
@SP
A=M-1
A=A-1
M=0
@END_GT_46
0;JMP
(GT_46)
@SP
A=M-1
A=A-1
M=-1
(END_GT_46)
@SP
M=M-1
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
A=M-1
D=M
@SP
M=M-1
@Sys.WHILE_END1
D;JNE
//push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop local 0
@0
D=A
@LCL
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP1
@Sys.WHILE_EXP1
0;JMP
//label WHILE_END1
(Sys.WHILE_END1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//pop argument 0
@0
D=A
@ARG
D=D+M
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//goto WHILE_EXP0
@Sys.WHILE_EXP0
0;JMP
//label WHILE_END0
(Sys.WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
//function Sys.error 0
(Sys.error)
@SP
A=M
//no locals
@0
D=A
@SP
M=M+D
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.printChar 1
@RETURN_Output.printChar_243
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(RETURN_Output.printChar_243)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.printChar 1
@RETURN_Output.printChar_244
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(RETURN_Output.printChar_244)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.printChar 1
@RETURN_Output.printChar_245
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(RETURN_Output.printChar_245)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printInt 1
@RETURN_Output.printInt_246
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(RETURN_Output.printInt_246)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//call Sys.halt 0
@RETURN_Sys.halt_247
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D+1
@ARG
D=M
@SP
A=M-1
M=D
@THIS
D=M
@SP
A=M
M=D
@THAT
D=M
@SP
A=M+1
M=D
D=A+1
@SP
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(RETURN_Sys.halt_247)
//pop temp 0
@0
D=A
@5
D=D+A
@13
M=D
@SP
A=M-1
D=M
@13
A=M
M=D
@SP
M=M-1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
 AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
